version: '3.2'
services:

  # Nginx Service
  # do not set a container_name as the init script for bottstraping the certificate uses the default naming scheme
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    tty: true
    user: "${USER_ID:-0}:${GROUP_ID:-0}"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - type: bind
        source:  "${ICUBAM_NGINX_CONF:-./docker/configs/nginx/app.conf}"
        target: /etc/nginx/conf.d/app.conf
      - type: bind
        source:  "${ICUBAM_CERTBOT_PATH:-./docker/configs/certbot}/conf"
        target: /etc/letsencrypt
      - type: bind
        source:  "${ICUBAM_CERTBOT_PATH:-./docker/configs/certbot}/www"
        target: /var/www/certbot
    networks:
      - icubam-network
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  # certbot service for certificate renewal
  # do not set a container_name as the init script for bottstraping the certificate uses the default naming scheme
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    user: "${USER_ID:-0}:${GROUP_ID:-0}"
    volumes:
      - type: bind
        source:  "${ICUBAM_CERTBOT_PATH:-./docker/configs/certbot}/conf"
        target: /etc/letsencrypt
      - type: bind
        source:  "${ICUBAM_CERTBOT_PATH:-./docker/configs/certbot}/www"
        target: /var/www/certbot
    networks:
      - icubam-network
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

# Docker Networks
networks:
  icubam-network:
    driver: bridge
