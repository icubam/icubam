version: '3.2'
services:

  # ICUBAM service
  app-server:
    build:
      context: ..
      dockerfile: ./docker/Dockerfile
    image: "${IMAGE_NAME:-icubam}:${IMAGE_TAG:-latest}"
    container_name: icubam-server
    command: ./start_server.sh
    restart: unless-stopped
    tty: true
    ports:
      - "8888:8888"
    environment:
      ENV_MODE : "$ENV_MODE"
      SECRET_COOKIE : "$SECRET_COOKIE"
      JWT_SECRET : "$JWT_SECRET"
      GOOGLE_API_KEY : "$GOOGLE_API_KEY"
      TW_KEY : "$TW_KEY"
      TW_API : "$TW_API"
    working_dir: /home/icubam
    volumes:
      - type: bind
        source: "${ICUBAM_CONFIG_PATH:-./resources/config.toml}"
        target: /home/icubam/resources/config.toml
      - type: bind
        source:  "${ICUBAM_PROD_DB_PATH:-./icubam.db}"
        target: /home/icubam/icubam.db
      - type: bind
        source: "${ICUBAM_TEST_DB_PATH:-./test.db}"
        target: /home/icubam/test.db
    networks:
      - icubam-network

  # ICUBAM sms service
  app-sms:
    build:
      context: ..
      dockerfile: ./docker/Dockerfile
    image: "${IMAGE_NAME:-icubam}:${IMAGE_TAG:-latest}"
    container_name: icubam-sms-server
    command: ./start_server_sms.sh
    restart: unless-stopped
    tty: true
    environment:
      ENV_MODE : "$ENV_MODE"
      SECRET_COOKIE : "$SECRET_COOKIE"
      JWT_SECRET : "$JWT_SECRET"
      GOOGLE_API_KEY : "$GOOGLE_API_KEY"
      TW_KEY : "$TW_KEY"
      TW_API : "$TW_API"
    working_dir: /home/icubam
    volumes:
      - type: bind
        source: "${ICUBAM_CONFIG_PATH:-./resources/config.toml}"
        target: /home/icubam/resources/config.toml
      - type: bind
        source:  "${ICUBAM_PROD_DB_PATH:-./icubam.db}"
        target: /home/icubam/icubam.db
      - type: bind
        source: "${ICUBAM_TEST_DB_PATH:-./test.db}"
        target: /home/icubam/test.db
    networks:
      - icubam-network

  # ICUBAM back-office service
  app-backoffice:
    build:
      context: ..
      dockerfile: ./docker/Dockerfile
    image: "${IMAGE_NAME:-icubam}:${IMAGE_TAG:-latest}"
    container_name: icubam-bo-server
    command: ./start_server_bo.sh
    restart: unless-stopped
    tty: true
    ports:
      - "8890:8890"
    environment:
      ENV_MODE : "$ENV_MODE"
      SECRET_COOKIE : "$SECRET_COOKIE"
      JWT_SECRET : "$JWT_SECRET"
      GOOGLE_API_KEY : "$GOOGLE_API_KEY"
      TW_KEY : "$TW_KEY"
      TW_API : "$TW_API"
    working_dir: /home/icubam
    volumes:
      - type: bind
        source: "${ICUBAM_CONFIG_PATH:-./resources/config.toml}"
        target: /home/icubam/resources/config.toml
      - type: bind
        source:  "${ICUBAM_PROD_DB_PATH:-./icubam.db}"
        target: /home/icubam/icubam.db
      - type: bind
        source: "${ICUBAM_TEST_DB_PATH:-./test.db}"
        target: /home/icubam/test.db
    networks:
      - icubam-network

  # Nginx Service
  # do not set a container_name as the init script for bottstraping the certificate uses the default naming scheme
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - type: bind
        source:  "${ICUBAM_NGINX_PATH:-./docker/configs/nginx}"
        target: /etc/nginx/conf.d
      - type: bind
        source:  "${ICUBAM_CERTBOT_PATH:-./docker/configs/certbot}/conf"
        target: /etc/letsencrypt
      - type: bind
        source:  "${ICUBAM_CERTBOT_PATH:-./docker/configs/certbot}/www"
        target: /var/www/certbot
    networks:
      - icubam-network
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  # certbot service for certificate renewal
  # do not set a container_name as the init script for bottstraping the certificate uses the default naming scheme
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - type: bind
        source:  "${ICUBAM_CERTBOT_PATH:-./docker/configs/certbot}/conf"
        target: /etc/letsencrypt
      - type: bind
        source:  "${ICUBAM_CERTBOT_PATH:-./docker/configs/certbot}/www"
        target: /var/www/certbot
    networks:
      - icubam-network
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

# Docker Networks
networks:
  icubam-network:
    driver: bridge
